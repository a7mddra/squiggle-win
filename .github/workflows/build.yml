name: Build Qt Dynamic + Build & Package drawview (Windows)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  QT_VERSION: "6.7.0"

jobs:
  build-and-package:
    name: Build drawview dynamically, deploy with windeployqt, package, upload
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (CMake, Ninja)
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          choco install cmake ninja -y --no-progress

      - name: Setup MSVC 2019 environment (matches Qt 6.7)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          vsversion: 2019

      - name: Install Qt 6.7.0 (dynamic)
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: desktop
          cache: true
          set-env: true

      - name: Configure CMake (drawview)
        shell: pwsh
        run: |
          $qtRoot = $env:QT_ROOT_DIR
          $qt6Dir = Join-Path $qtRoot "lib/cmake/Qt6"
          Write-Host "QT_ROOT_DIR = $qtRoot"
          Write-Host "Qt6_DIR = $qt6Dir"
          if (-not (Test-Path $qt6Dir)) { Write-Error "Qt6_DIR not found"; exit 1 }
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DQt6_DIR="$qt6Dir"

      - name: Build drawview
        run: cmake --build build --config Release --parallel

      - name: Deploy with windeployqt
        shell: pwsh
        run: |
          $qtRoot = $env:QT_ROOT_DIR
          $qtBin = Join-Path $qtRoot "bin"
          $windeployqt = Join-Path $qtBin "windeployqt.exe"
          $exePath = "${{ github.workspace }}\build\Release\drawview.exe"
          $deployDir = "${{ github.workspace }}\deploy"
          if (Test-Path $deployDir) { Remove-Item -Recurse -Force $deployDir }
          New-Item -ItemType Directory -Path $deployDir | Out-Null
          if (-not (Test-Path $exePath)) { Write-Error "Built exe not found at $exePath"; exit 1 }
          if (-not (Test-Path $windeployqt)) { Write-Error "windeployqt not found at $windeployqt"; exit 1 }
          Write-Host "Running windeployqt from $windeployqt on $exePath"
          & $windeployqt --dir "$deployDir" --release --no-translations --no-opengl-sw --no-angle-d3d11 "$exePath"
          if ($LASTEXITCODE -ne 0) { Write-Error "windeployqt failed"; exit $LASTEXITCODE }
          Write-Host "Deployment complete. Contents of deploy:"
          Get-ChildItem -Path $deployDir -Recurse | Format-Table Name, Length

      - name: Zip deployment folder
        shell: pwsh
        run: |
          $zipFile = "${{ github.workspace }}\drawview-windows-dynamic.zip"
          if (Test-Path $zipFile) { Remove-Item $zipFile -Force }
          Compress-Archive -Path "${{ github.workspace }}\deploy\*" -DestinationPath $zipFile -Force
          Write-Host "Created portable ZIP: $zipFile (dynamic build with bundled DLLs/plugins)"

      - name: Upload packaged app artifact
        uses: actions/upload-artifact@v4
        with:
          name: drawview-windows-dynamic-package
          path: drawview-windows-dynamic.zip